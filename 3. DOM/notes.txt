******** DOM ************
Document Object Model
DOM is a structured representation of an html Document
DOM is used to connect webpages to scripts like javascript


********* what you will learn ***************
how to create our fundamental game variables.
how to generate a random number
how to manipulate the DOM
how to read from the DOM
how to change css styles

********* game pre-reuisites ***************
the players score will be zero at the beginning [0,0]
current(round) score will be zero at the beginning
who is the active player boolean for 2 int for more than 2
generate random number between 1 to 6 for dice roll -> use math random

********* html dom properties ****************
random number generation
    Math.floor(Math.random() * 6) + 1
        -math.floor()  ->removes the extra decimal values returns whole number
        - lastly +1 for it generates from 0 to 5 then so..
********* html dom properties ****************
///////accessing html class and id's/////////
    class =>    .
    id    =>    #
///////get data from html/////////
   var x = document.querySelector(".example").textContent;
///////set data to html/////////
    document.querySelector(".example").innerHtml = '<h1>'+helloVar+'</h1>';
********* css dom properties *****************

                    /*****************************
                     * hide view content with css*
                     ****************************/
                   
        -display properties
                    initial -> Sets this property to its default value.
                    none -> The element is completely removed
                    inline -> like span takes only that place
                    block -> like p tag takes whole width
                    inherit -> Inherits this property from its parent element.
            -more info https://www.w3schools.com/cssref/pr_class_display.asp
********* Events *****************
Events:
    Notifications that are sent to notify the code that something happened on the webpage
        ex:
            Clicking a button
            resizing a window
            scrolling down
            pressing a key
Event Listener:
    A function that performs an action based on a certain event.it waits for a specific event to happen.

///////Event Listener example/////////
document.querySelector('.someButton').addEventListener('click');

                    /******************************
                     * Some Event Listener Example*
                     *****************************/


Resource events
            Event Name	            Fired When
            error	                A resource failed to load.
            abort	                The loading of a resource has been aborted.
            load	                A resource and its dependent resources have finished loading.
            beforeunload	        The window, the document and its resources are about to be unloaded.
            unload	                The document or a dependent resource is being unloaded.
Network events
            Event Name	            Fired When
            online	                The browser has gained access to the network.
            offline	                The browser has lost access to the network.
Focus events
            Event Name	            Fired When
            focus	                An element has received focus (does not bubble).
            blur	                An element has lost focus (does not bubble).
WebSocket events
            Event Name	            Fired When
            open	                A WebSocket connection has been established.
            message	                A message is received through a WebSocket.
            error	                A WebSocket connection has been closed with prejudice (some data couldn't be sent for example).
            close	                A WebSocket connection has been closed.
Session History events
            Event Name	            Fired When
            pagehide	            A session history entry is being traversed from.
            pageshow	            A session history entry is being traversed to.
            popstate	            A session history entry is being navigated to (in certain cases).
CSS Animation events
            Event Name	            Fired When
            animationstart	        A CSS animation has started.
            animationcancel	        A CSS animation has aborted.
            animationend	        A CSS animation has completed.
            animationiteration	    A CSS animation is repeated.
CSS Transition events
            Event Name	            Fired When
            transitionstart	        A CSS transition has actually started (fired after any delay).
            transitioncancel	    A CSS transition has been cancelled.
            transitionend	        A CSS transition has completed.
            transitionrun	        A CSS transition has begun running (fired before any delay starts).
Form events
            Event Name	            Fired When
            reset	                The reset button is pressed
            submit	                The submit button is pressed
Printing events
            Event Name	            Fired When
            beforeprint	            The print dialog is opened
            afterprint	            The print dialog is closed
Text Composition events
            Event Name	            Fired When
            compositionstart	    The composition of a passage of text is prepared (similar to keydown for a keyboard input, but works with other inputs such as speech recognition).
            compositionupdate	    A character is added to a passage of text being composed.
            compositionend	        The composition of a passage of text has been completed or canceled.
View events
            Event Name	            Fired When
            fullscreenchange	    An element was turned to fullscreen mode or back to normal mode.
            fullscreenerror	        It was impossible to switch to fullscreen mode for technical reasons or because the permission was denied.
            resize	                The document view has been resized.
            scroll	                The document view or an element has been scrolled.
Clipboard events
            Event Name	            Fired When
            cut	The                 selection has been cut and copied to the clipboard
            copy	                The selection has been copied to the clipboard
            paste	                The item from the clipboard has been pasted
Keyboard events
            Event Name	            Fired When
            keydown	                ANY key is pressed
            keypress	            ANY key except Shift, Fn, CapsLock is in pressed position. (Fired continously.)
            keyup	                ANY key is released
Mouse events
            Event Name	            Fired When
            auxclick	            A pointing device button (ANY non-primary button) has been pressed and released on an element.
            click	                A pointing device button (ANY button; soon to be primary button only) has been pressed and released on an element.
            contextmenu	            The right button of the mouse is clicked (before the context menu is displayed).
            dblclick	            A pointing device button is clicked twice on an element.
            mousedown	            A pointing device button is pressed on an element.
            mouseenter	            A pointing device is moved onto the element that has the listener attached.
            mouseleave	            A pointing device is moved off the element that has the listener attached.
            mousemove	            A pointing device is moved over an element. (Fired continously as the mouse moves.)
            mouseover	            A pointing device is moved onto the element that has the listener attached or onto one of its children.
            mouseout	            A pointing device is moved off the element that has the listener attached or off one of its children.
            mouseup	                A pointing device button is released over an element.
            pointerlockchange	    The pointer was locked or released.
            pointerlockerror	    It was impossible to lock the pointer for technical reasons or because the permission was denied.
            select	                Some text is being selected.
            wheel	                A wheel button of a pointing device is rotated in any direction.
Drag & Drop events
            Event Name	            Fired When
            drag	                An element or text selection is being dragged (Fired continuously every 350ms).
            dragend	                A drag operation is being ended (by releasing a mouse button or hitting the escape key).
            dragenter	            A dragged element or text selection enters a valid drop target.
            dragstart	            The user starts dragging an element or text selection.
            dragleave	            A dragged element or text selection leaves a valid drop target.
            dragover	            An element or text selection is being dragged over a valid drop target. (Fired continuously every 350ms.)
            drop	                An element is dropped on a valid drop target.
Media events
            Event Name	            Fired When
            audioprocess	        The input buffer of a ScriptProcessorNode is ready to be processed.
            canplay	                The browser can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.
            canplaythrough	        The browser estimates it can play the media up to its end without stopping for content buffering.
            complete	            The rendering of an OfflineAudioContext is terminated.
            durationchange	        The duration attribute has been updated.
            emptied	                The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.
            ended	                Playback has stopped because the end of the media was reached.
            loadeddata	            The first frame of the media has finished loading.
            loadedmetadata	        The metadata has been loaded.
            pause	                Playback has been paused.
            play	                Playback has begun.
            playing	                Playback is ready to start after having been paused or delayed due to lack of data.
            ratechange	            The playback rate has changed.
            seeked	                A seek operation completed.
            seeking	                A seek operation began.
            stalled	                The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.
            suspend	                Media data loading has been suspended.
            timeupdate	            The time indicated by the currentTime attribute has been updated.
            volumechange	        The volume has changed.
            waiting	                Playback has stopped because of a temporary lack of data.
Progress events
            Event Name	            Fired When
            abort	                Progression has been terminated (not due to an error).
            error	                Progression has failed.
            load	                Progression has been successful.
            loadend	                Progress has stopped (after "error", "abort" or "load" have been dispatched).
            loadstart	            Progress has begun.
            progress	            In progress.
            timeout	                Progression is terminated due to preset time expiring.Storage events
            change (see Non-standard events)
            storage

Update events
            checking
            downloading
            error
            noupdate
            obsolete
            updateready

Value change events
            broadcast
            CheckboxStateChange
            hashchange
            input
            RadioStateChange
            readystatechange
            ValueChange

Uncategorized events
            invalid
            message
            message
            open
            show

                            -source https://developer.mozilla.org/en-US/docs/Web/Events


********* Event Listener functions *****************
Anonymus function:
document.querySelector('#heyButton').addEventListener('click',function (){
    console.log('Hey Button Clicked');
});

callback function:
document.querySelector('#heyButton2').addEventListener('click',callThis);
function callThis(){
    console.log('you called a callback functionby clicking a button');
}




************** dice game ************************
comments
/*
GAME RULES:

- The game has 2 players, playing in rounds
- In each turn, a player rolls a dice as many times as he whishes. Each result get added to his ROUND score
- BUT, if the player rolls a 1, all his ROUND score gets lost. After that, it's the next player's turn
- The player can choose to 'Hold', which means that his ROUND score gets added to his GLBAL score. After that, it's the next player's turn
- The first player to reach 100 points on GLOBAL score wins the game

*/

/*
    - 2 player game
    - who scores more than 100 wins
    - if the player roll 1 that current score will be zero
*/

/***********************
 * set text to the html*
 ***********************/
//set text content from html
//document.querySelector('#current-'+activePlayer).textContent = dice;
//if you want to change hatml use innerHtml
//document.querySelector('#current-'+activePlayer).innerHTML = '<em>' + dice + '</em>';


/*************************
 * get text from the html*
 *************************/
/*
var x = document.querySelector('#name-0').textContent;
console.log(x);


                    /*****************************
                     * hide view content with css*
                     ****************************/
/*
 *display properties
 *initial ->start property
 *none->hide
 *inline->like span takes only that place
 *block->like p tag takes whole width
 */
//document.querySelector('.dice').style.display = 'none';


//document.querySelector('.player-' + activePlayer + '-panel').style.backgroundColor = '#EB4D4D';
// document.querySelector('.player-0-panel').classList.remove('active');
//document.querySelector('.player-1-panel').classList.add('active');
